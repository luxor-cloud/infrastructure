---
- name: Install python3-pip
  apt:
    name: python3-pip

- name: Install docker client
  pip:
    name: docker

- name: Get infos on container registry
  docker_container_info:
    name: registry
  register: result

- name: Stop container
  docker_container: 
    name: registry
    state: stopped
  when: result.exists

- name: "Ensures  {{ __registry_config_dir_path  }} exists"
  file: path="{{ __registry_config_dir_path }}" state=directory

- name: Write configuration
  copy: content="{{ registry_config | to_nice_yaml }}" dest={{ __registry_config_file_path }}
  when: registry_config is defined

- name: Using default config
  copy: content="{{ __registry_default_config | to_nice_yaml }}" dest={{ __registry_config_file_path }}
  when: registry_config is not defined

- name: Create registry container
  docker_container:
    name: registry
    state: started
    image: "registry:{{ registry_version }}"
    volumes:
      - "{{ registry_named_volume }}:/var/lib/registry"
      - "{{ __registry_config_file_path }}:/etc/docker/registry/config.yml"
    ports:
      - "{{ registry_port }}:443"
    env:
      REGISTRY_HTTP_ADDR: "0.0.0.0:443"
  when: not result.exists

- name: Start container
  docker_container:
    name: registry
    state: started
  when: result.exists

